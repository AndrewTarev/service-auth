services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DATABASE_DBNAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_DBNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--requirepass", "your_secure_password" ]
    environment:
      - TZ=UTC
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  app:
    build:
      context: ./
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - my_network

volumes:
  redis_data:
    driver: local

networks:
  my_network:
    driver: bridge